---
- name: Instalación desde cero de Docker
  hosts: ubuntu
  #hosts: localhost # ejecución en local
  #connection: local
  vars:
    docker_ubuntu_codename: "{{ ansible_lsb.codename }}"
  vars_files:
    - group_vars/all/vault.yml
  tasks:
    - name: Remove Docker packages
      package:
        name: "{{item}}"
        state: absent
      loop: ['docker', 'docker-engine', 'docker-doc', 'docker.io', 'containerd', 'runc', 'docker-compose-plugin', 'docker-compose', 'docker-compose-v2', 'podman-docker']
    - name: Install required system packages
      package:
        name: 
          - 'apt-transport-https'
          - 'ca-certificates'
          - 'curl'
          - 'software-properties-common'
          - 'python3-pip'
          - 'virtualenv'
          - 'python3-setuptools'
          - 'gnupg'
          - 'lsb-release'
        state: present
        update_cache: yes
      #loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common',
      #'python3-pip', 'virtualenv', 'python3-setuptools', 'gnupg', 'lsb-release']
    - name: Asegurar módulos de kernel necesarios
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Configurar sysctl para Docker
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        state: present
        reload: yes
      loop:
        - { key: net.ipv4.ip_forward, value: 1 }
        - { key: net.bridge.bridge-nf-call-iptables, value: 1 }
    - name: Add Docker GPG apt Key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc
        mode: '0644'
        force: true
    - name: Add Docker Repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu {{ docker_ubuntu_codename }} stable"
        state: present
    - name: Install Docker packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop: [ 'docker-ce', 'docker-ce-cli', 'containerd.io','docker-compose-plugin', 'docker-buildx-plugin']
    - name: Ensure docker service is started and enabled
      service:
        name: docker
        enabled: yes
        state: started
    - name: Ensure containerd service is started and enabled
      service:
        name: containerd
        enabled: yes
        state: started
    - name: Install Docker Module for Python
      package:
        name: python3-docker
        state: present
        # update_cache: yes

    - name: Ensure docker group exists
      ansible.builtin.group:
        name: docker
        state: present

...
